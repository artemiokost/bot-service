plugins {
    id "com.github.johnrengelman.shadow" version "4.0.4"
    id "java"
}

sourceCompatibility = 1.8

shadowJar {
    zip64 = true
}

ext {
    vertxVersion = "3.6.3"
    junitVersion = "4.12"
}

repositories {
    jcenter()
    mavenCentral()
}

sourceSets {
    main {
        java {
            srcDirs += "src/main/generated"
        }
    }
}

dependencies {
    compile "com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.9.7"
    compile "io.vertx:vertx-config:$vertxVersion"
    compile "io.vertx:vertx-core:$vertxVersion"
    compile "io.vertx:vertx-rx-java2:$vertxVersion"
    compile "io.vertx:vertx-web:$vertxVersion"
    compile "io.vertx:vertx-web-api-contract:$vertxVersion"
    compile "io.vertx:vertx-web-client:$vertxVersion"
    compile "org.slf4j:slf4j-log4j12:1.7.25"
    compileOnly "io.vertx:vertx-codegen:$vertxVersion"
    compileOnly "io.vertx:vertx-service-proxy:$vertxVersion"
    testCompile "io.vertx:vertx-unit:$vertxVersion"
    testCompile "junit:junit:$junitVersion"
}

task annotationProcessing(type: JavaCompile, group: "build") {
    source = sourceSets.main.java
    classpath = configurations.compile + configurations.compileOnly
    destinationDir = project.file("src/main/generated")
    options.compilerArgs = [
            "-proc:only",
            "-processor", "io.vertx.codegen.CodeGenProcessor",
            "-Acodegen.output=${project.projectDir}/src/main"
    ]
}

jar {
    archiveName = "bot-service.jar"
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    manifest {
        attributes "Main-Class": "io.vertx.core.Launcher"
        attributes "Main-Verticle": "io.depa.bot.BotVerticle"
    }
}

compileJava {
    dependsOn annotationProcessing
}

task stage(dependsOn: "build")

wrapper {
    gradleVersion = "4.10"
}